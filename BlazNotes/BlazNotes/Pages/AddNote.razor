@page "/add"
@inject IToastService toastService
@inject INoteService noteService

<h1>Add note</h1>
<div class="card card-@Theme">
    <div class="card-body">
        <EditForm Model="@command" OnValidSubmit="@AddNoteAsync">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="title">Title</label>
                <input type="text"  class="form-control" placeholder="Input title here" bind="@command.Title" name="title"/>
                <ValidationMessage For="@(() => command.Title)" />
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea name="description" rows="5" class="form-control" placeholder="Input description here" bind="@command.Description"></textarea>
                <ValidationMessage For="@(() => command.Description)" />
            </div>
            <button type="button" class="btn btn-secondary" onclick="@ResetFormAsync">Reset</button>
            <button type="submit" class="btn btn-success">Add</button>
        </EditForm>
    </div>
</div>

@functions
{
    [CascadingParameter(Name = "Theme")] string Theme { get; set; }

    private CreateNoteCommand command = new CreateNoteCommand();

    async Task AddNoteAsync()
    {
        try
        {
            await noteService.CreateAsync(command.Title, command.Description);
            toastService.ShowSuccess("Note added!", "Success");
        }
        catch (Exception)
        {
            toastService.ShowError("Something went wrong!", "Failed");
        }
        finally
        {
            // title = "";
            // description = "";
        }
    }

    async Task ResetFormAsync()
    {
        await Task.FromResult(command = new CreateNoteCommand());
    }
}