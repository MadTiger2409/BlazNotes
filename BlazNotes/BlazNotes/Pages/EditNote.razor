@page "/edit/{Id:int}"

@using BlazNotes.Services.Interfaces;
@using BlazNotes.Models;

@inject INoteService noteService

<h1>Edit note</h1>
<div class="card">
    <div class="card-body">
        <form>
            <div class="form-group">
                <label for="title">Title</label>
                <input type="text"
                       name="title"
                       class="form-control"
                       bind="@title"
                       onfocusin=@ClearMessageAsync
                       placeholder="Input title here" />
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea name="description"
                          class="form-control"
                          bind="@description"
                          onfocusin=@ClearMessageAsync
                          placeholder="Input description here"/>
            </div>
            <button type="button"
                    class="btn btn-secondary"
                    onclick=@RestoreContentAsync>Restore</button>
            <button type="button"
                    class="btn btn-success"
                    onclick=@UpdateNoteAsync>Update</button>
        </form>
        <p class="text-danger">@message</p>
    </div>
</div>

@functions
{
    [Parameter]
    public int Id { get; set; }

    string title;
    string description;
    string message;
    Note note;

    protected override async Task OnInitAsync()
    {
        note = await noteService.ReadAsync(Id);

        await RestoreContentAsync();
    }

    async Task UpdateNoteAsync()
    {
        try
        {
            await noteService.UpdateAsync(Id, title, description);
            message = "";
        }
        catch (Exception)
        {

            message = "Something went wrong. Try again!";
        }
    }

    async Task ClearMessageAsync()
    {
        await Task.FromResult(message = "");
    }

    async Task RestoreContentAsync()
    {
        await Task.FromResult(title = note.Title);
        await Task.FromResult(description = note.Description);
    }
}